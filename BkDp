package sync;
class Account
{
	public int balance;
	public Account()
	{
		balance=5000;
	}
	public synchronized void withdraw(int bal)
	{
		try
		{
			Thread.sleep(500);
		}
		catch(InterruptedException e)
		{
			e.printStackTrace();
		}
		balance=balance-bal;
		System.out.println("Withdrawn amount:"+bal);
		System.out.println("Remaining balance:"+balance);
	}
	public synchronized void deposit(int bal)
	{
		try
		{
			Thread.sleep(500);
		}
		catch(InterruptedException e)
		{
			e.printStackTrace();
		}
		balance=balance+bal;
		System.out.println("Deposited amount:"+bal);
		System.out.println("New balance:"+balance);
	}
	public synchronized void enquiry()
	{
		try
		{
			Thread.sleep(500);
		}
		catch(InterruptedException e)
		{
			e.printStackTrace();
		}
		System.out.println("Available balance:"+balance);
	}
}
class Transaction implements Runnable
{
	Account a1;
	Transaction(Account a)
	{
		a1=a;
	}
	public void run()
	{
		a1.withdraw(500);
		a1.deposit(1000);
		a1.enquiry();
	}
}
public class BankDeposit {
	public static void main(String[] args) {
		Account a=new Account();
		Transaction t=new Transaction(a);
		Thread t1=new Thread(t);
		//Thread t2=new Thread(t);
		t1.start();
		//t2.start();
	}

}
